{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfaxpractice"
		},
		"ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS'"
		},
		"AzureSQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSQL'"
		},
		"ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://wsaxpractice.dfs.core.windows.net/"
		},
		"AzureSQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "server-axpractice.database.windows.net"
		},
		"AzureSQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-axpractice"
		},
		"AzureSQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "axadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TestEmailSendLogicApp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HttpsPOST",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "FilePath",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/035e136515624ef09b2163580303d3b3/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=huurzyGtRReGm7oIp8RLChEm--XvC4ZZ025aZYIYOxQ",
							"body": {
								"value": "{\n        \"Pipeline\":\"@{pipeline().Pipeline}\",\n        \"ErrorMessage\":\"No Error\",\n\t\t\"DataFactoryName\":\"@{pipeline().DataFactory}\",\n        \"Runid\":\"@{pipeline().RunId}\",\n        \"FileName\":\"@{variables('FilePath')}\",\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilePath",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilePath",
							"value": {
								"value": "/testemail/testemail/Test_Email.csv",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FilePath": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-23T12:38:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSQL_properties_typeProperties_server')]",
					"database": "[parameters('AzureSQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TestCDCID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "date"
					},
					{
						"name": "Mobile",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TestCDCSource"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TestCDCID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "date"
					},
					{
						"name": "Mobile",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TestCDCTarget"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestChangeCapture_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Test_ChangeCapture.csv",
						"folderPath": "ChangeCapture",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "Mobile",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlChangeCaptureTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "date"
					},
					{
						"name": "Mobile",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ChangeCaptureTest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCDC')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "dbo.TestCDCSource",
								"properties": {
									"schema": [
										{
											"name": "TestCDCID",
											"dataType": "integer"
										},
										{
											"name": "Name",
											"dataType": "string"
										},
										{
											"name": "DOB",
											"dataType": "date"
										},
										{
											"name": "Mobile",
											"dataType": "string"
										},
										{
											"name": "CreatedDate",
											"dataType": "timestamp"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "TestCDCSource"
										},
										{
											"name": "enableNativeCdc",
											"value": true
										},
										{
											"name": "netChanges",
											"value": true
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSQL",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "skipInitialLoad",
									"value": true
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "dbo.TestCDCTarget",
								"properties": {
									"schema": [
										{
											"name": "TestCDCID",
											"dataType": "integer"
										},
										{
											"name": "Name",
											"dataType": "string"
										},
										{
											"name": "DOB",
											"dataType": "date"
										},
										{
											"name": "Mobile",
											"dataType": "string"
										},
										{
											"name": "CreatedDate",
											"dataType": "timestamp"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "TestCDCTarget"
										},
										{
											"name": "keys",
											"value": [
												"TestCDCID"
											]
										},
										{
											"name": "deletable",
											"value": true
										},
										{
											"name": "updateable",
											"value": true
										},
										{
											"name": "upsertable",
											"value": true
										},
										{
											"name": "defaultToUpsert",
											"value": true
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSQL",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "deletable",
									"value": false
								},
								{
									"name": "insertable",
									"value": true
								},
								{
									"name": "updateable",
									"value": false
								},
								{
									"name": "upsertable",
									"value": false
								},
								{
									"name": "skipDuplicateMapInputs",
									"value": true
								},
								{
									"name": "skipDuplicateMapOutputs",
									"value": true
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "dbo.TestCDCTarget",
								"sourceEntityName": "dbo.TestCDCSource",
								"sourceConnectionReference": {
									"connectionName": "AzureSQL",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": [
										{
											"name": "CreatedDate",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "CreatedDate",
												"entity": "dbo.TestCDCSource",
												"entityConnectionReference": {
													"connectionName": "AzureSQL",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "DOB",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "DOB",
												"entity": "dbo.TestCDCSource",
												"entityConnectionReference": {
													"connectionName": "AzureSQL",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Mobile",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Mobile",
												"entity": "dbo.TestCDCSource",
												"entityConnectionReference": {
													"connectionName": "AzureSQL",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Name",
											"type": "Derived",
											"functionName": "upper",
											"expression": "upper(Name)",
											"attributeReferences": [
												{
													"name": "Name",
													"entity": "dbo.TestCDCSource",
													"entityConnectionReference": {
														"connectionName": "AzureSQL",
														"type": "linkedservicetype"
													}
												}
											]
										},
										{
											"name": "TestCDCID",
											"type": "Direct",
											"attributeReference": {
												"name": "TestCDCID",
												"entity": "dbo.TestCDCSource",
												"entityConnectionReference": {
													"connectionName": "AzureSQL",
													"type": "linkedservicetype"
												}
											}
										}
									]
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1
					},
					"mode": "Microbatch"
				},
				"status": "Stopped",
				"allowVNetOverride": false
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCSVsource')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "test/ChangeCapture",
								"properties": {
									"schema": [
										{
											"name": "ID",
											"dataType": "short"
										},
										{
											"name": "FirstName",
											"dataType": "string"
										},
										{
											"name": "LastName",
											"dataType": "string"
										},
										{
											"name": "DOB",
											"dataType": "date"
										},
										{
											"name": "Mobile",
											"dataType": "integer"
										},
										{
											"name": "Email",
											"dataType": "string"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "test"
										},
										{
											"name": "fileSystem",
											"value": "test"
										},
										{
											"name": "folderPath",
											"value": "ChangeCapture"
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "ADLS",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureBlobFS",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "dateFormats",
									"value": [
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "timestampFormats",
									"value": [
										"yyyyMMddHHmm",
										"yyyyMMdd HHmm",
										"yyyyMMddHHmmss",
										"yyyyMMdd HHmmss",
										"dd-MM-yyyy HH:mm:ss",
										"dd-MM-yyyy HH:mm",
										"yyyy-M-d H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss",
										"yyyy-MM-dd HH:mm:ss",
										"yyyy-MM-dd HH:mm",
										"yyyy.MM.dd HH:mm:ss",
										"MM/dd/yyyy HH:mm:ss",
										"M/d/yyyy H:m:s",
										"yyyy/MM/dd HH:mm:ss",
										"yyyy/M/d H:m:s",
										"dd MMM yyyy HH:mm:ss",
										"dd MMMM yyyy HH:mm:ss",
										"d MMM yyyy H:m:s",
										"d MMMM yyyy H:m:s",
										"d-M-yyyy H:m:s",
										"d-M-yyyy H:m",
										"yyyy-M-d H:m",
										"MM/dd/yyyy HH:mm",
										"M/d/yyyy H:m",
										"yyyy/MM/dd HH:mm",
										"yyyy/M/d H:m",
										"dd MMMM yyyy HH:mm",
										"dd MMM yyyy HH:mm",
										"d MMMM yyyy H:m",
										"d MMM yyyy H:m",
										"MM-dd-yyyy hh:mm:ss a",
										"MM-dd-yyyy HH:mm:ss",
										"MM/dd/yyyy hh:mm:ss a",
										"yyyy.MM.dd hh:mm:ss a",
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "enableCdc",
									"value": true
								},
								{
									"name": "skipInitialLoad",
									"value": true
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "test/TestCDCfile/ChangeCapture",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "test"
										},
										{
											"name": "fileSystem",
											"value": "test"
										},
										{
											"name": "folderPath",
											"value": "TestCDCfile/ChangeCapture"
										},
										{
											"name": "allowSchemaDrift",
											"value": true
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": true
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "ADLS",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureBlobFS",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "test/TestCDCfile/ChangeCapture",
								"sourceEntityName": "test/ChangeCapture",
								"sourceConnectionReference": {
									"connectionName": "ADLS",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": [
										{
											"name": "DOB",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "DOB",
												"entity": "test/ChangeCapture",
												"entityConnectionReference": {
													"connectionName": "ADLS",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "Email",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Email",
												"entity": "test/ChangeCapture",
												"entityConnectionReference": {
													"connectionName": "ADLS",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "FirstName",
											"type": "Derived",
											"functionName": "upper",
											"expression": "upper(FirstName)",
											"attributeReferences": [
												{
													"name": "FirstName",
													"entity": "test/ChangeCapture",
													"entityConnectionReference": {
														"connectionName": "ADLS",
														"type": "linkedservicetype"
													}
												}
											]
										},
										{
											"name": "ID",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "ID",
												"entity": "test/ChangeCapture",
												"entityConnectionReference": {
													"connectionName": "ADLS",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "LastName",
											"type": "Derived",
											"functionName": "lower",
											"expression": "lower(LastName)",
											"attributeReferences": [
												{
													"name": "LastName",
													"entity": "test/ChangeCapture",
													"entityConnectionReference": {
														"connectionName": "ADLS",
														"type": "linkedservicetype"
													}
												}
											]
										},
										{
											"name": "Mobile",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "Mobile",
												"entity": "test/ChangeCapture",
												"entityConnectionReference": {
													"connectionName": "ADLS",
													"type": "linkedservicetype"
												}
											}
										}
									]
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1
					},
					"mode": "Microbatch"
				},
				"allowVNetOverride": false
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChangeCapture')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TestChangeCapture_Source",
								"type": "DatasetReference"
							},
							"name": "TestChangeCapture"
						},
						{
							"dataset": {
								"referenceName": "sqlChangeCaptureTest",
								"type": "DatasetReference"
							},
							"name": "sqlChangeCaptureTest"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sqlChangeCaptureTest",
								"type": "DatasetReference"
							},
							"name": "sqlChangeCaptureTestS"
						},
						{
							"dataset": {
								"referenceName": "sqlChangeCaptureTest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "HashCSV"
						},
						{
							"name": "HashSQL"
						},
						{
							"name": "split1"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          DOB as date,",
						"          Mobile as string,",
						"          Email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> TestChangeCapture",
						"source(output(",
						"          ID as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          DOB as date,",
						"          Mobile as string,",
						"          Email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sqlChangeCaptureTest",
						"TestChangeCapture derive(HashValue1 = sha1(256,columns())) ~> HashCSV",
						"sqlChangeCaptureTest derive(HashValue2 = sha1(256,columns())) ~> HashSQL",
						"lookup1 split(isNull(HashValue2),",
						"     equals(HashValue1, HashValue2),",
						"     disjoint: false) ~> split1@(Insert, Update)",
						"HashCSV, HashSQL lookup(HashValue1 == HashValue2,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"split1@Update alterRow(updateIf(true())) ~> alterRow1",
						"split1@Insert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          DOB as date,",
						"          Mobile as string,",
						"          Email as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sqlChangeCaptureTestS",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          DOB as date,",
						"          Mobile as string,",
						"          Email as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['ID','DOB'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TestChangeCapture_Source')]",
				"[concat(variables('factoryId'), '/datasets/sqlChangeCaptureTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCDC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TestCDCID as integer,",
						"          Name as string,",
						"          DOB as date,",
						"          Mobile as string,",
						"          CreatedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableNativeCdc: true,",
						"     netChanges: true,",
						"     skipInitialLoad: false,",
						"     isolationLevel: 'READ_COMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TestCDCID as integer,",
						"          Name as string,",
						"          DOB as date,",
						"          Mobile as string,",
						"          CreatedDate as timestamp",
						"     ),",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     keys:['TestCDCID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChangeCapture')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ChangeCapture",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ChangeCapture",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TestChangeCapture": {},
									"sqlChangeCaptureTest": {},
									"sqlChangeCaptureTestS": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ChangeCapture')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TestCDC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "95a4324c-66f6-419a-afa0-be62bc611d8e"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TestCDC')]"
			]
		}
	]
}