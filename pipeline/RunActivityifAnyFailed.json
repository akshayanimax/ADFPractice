{
	"name": "RunActivityifAnyFailed",
	"properties": {
		"activities": [
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Name",
					"value": {
						"value": "@pipeline().parameters.Name1",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Name",
					"value": {
						"value": "@pipeline().parameters.Name2",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable3",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Name",
					"value": {
						"value": "@pipeline().parameters.Name3",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable4",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable3",
						"dependencyConditions": [
							"Skipped",
							"Failed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Name",
					"value": ""
				}
			}
		],
		"parameters": {
			"Name1": {
				"type": "string",
				"defaultValue": "Hello"
			},
			"Name2": {
				"type": "string",
				"defaultValue": "Hi"
			},
			"Name3": {
				"type": "string",
				"defaultValue": "Go"
			}
		},
		"variables": {
			"Name": {
				"type": "String"
			}
		},
		"annotations": []
	}
}